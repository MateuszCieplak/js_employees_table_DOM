{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAa,SAAS,gBAAgB,CAAC,mBACvC,EAAQ,SAAS,aAAa,CAAC,SACjC,EAAc,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OAG9C,EAAY,CAAC,EAEnB,EAAW,OAAO,CAAC,SAAC,CAApB,EACE,EAAQ,gBAAgB,CAAC,QAAS,eAGjB,E,EAKX,EARkC,OAGvB,EAHiC,EAAQ,SAAS,CAInE,EAAc,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OAEhD,CAAS,CAAC,EAAY,CAAG,AAA2B,QAA3B,CAAS,CAAC,EAAY,CAAa,OAAS,MAE/D,EAAa,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAI,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAAa,IAAI,CAAC,SAAC,CAAA,CAAG,CAA7C,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAC7C,EAAQ,EAAE,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAEnD,GAAI,AAAgB,IAAhB,GAAqB,AAAgB,IAAhB,GAAqB,AAAgB,IAAhB,EAAmB,CAC/D,IAAM,EAAa,EAAM,aAAa,CAAC,GAEvC,MAAO,AAA2B,QAA3B,CAAS,CAAC,EAAY,CAAa,EAAa,CAAC,CAC1D,CAAO,GAAI,AAAgB,IAAhB,EAAmB,CAC5B,IAAM,EAAa,OAAO,GAAS,OAAO,GAE1C,MAAO,AAA2B,QAA3B,CAAS,CAAC,EAAY,CAAa,EAAa,CAAC,CAC1D,CAAO,GAAI,AAAgB,IAAhB,EAAmB,CAC5B,IAAM,EAAO,EAAM,OAAO,CAAC,UAAW,IAChC,EAAO,EA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar body = document.querySelector('body');\nvar trHeadList = document.querySelectorAll('thead > tr > th');\nvar tbody = document.querySelector('tbody');\nvar trListTable = Array.from(tbody.querySelectorAll('tr'));\n// Sorting table\nvar sortOrder = {};\ntrHeadList.forEach(function(element) {\n    element.addEventListener('click', function() {\n        return sortTable(element.cellIndex);\n    });\n});\nfunction sortTable(columnIndex) {\n    trListTable = Array.from(tbody.querySelectorAll('tr'));\n    sortOrder[columnIndex] = sortOrder[columnIndex] === 'asc' ? 'desc' : 'asc';\n    var sortedRows = _to_consumable_array(trListTable).sort(function(a, b) {\n        var aText = a.cells[columnIndex].textContent.trim();\n        var bText = b.cells[columnIndex].textContent.trim();\n        if (columnIndex === 0 || columnIndex === 1 || columnIndex === 2) {\n            var comparison = aText.localeCompare(bText);\n            return sortOrder[columnIndex] === 'asc' ? comparison : -comparison;\n        } else if (columnIndex === 3) {\n            var comparison1 = Number(aText) - Number(bText);\n            return sortOrder[columnIndex] === 'asc' ? comparison1 : -comparison1;\n        } else if (columnIndex === 4) {\n            var newA = aText.replace(/[,$()]/g, '');\n            var newB = bText.replace(/[,$()]/g, '');\n            var comparison2 = Number(newA) - Number(newB);\n            return sortOrder[columnIndex] === 'asc' ? comparison2 : -comparison2;\n        }\n    });\n    tbody.innerHTML = '';\n    sortedRows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n}\n// Selecting row\ntrListTable.forEach(function(element) {\n    element.addEventListener('click', function() {\n        trListTable.forEach(function(row) {\n            if (row.classList.contains('active')) row.classList.remove('active');\n        });\n        element.classList.toggle('active');\n    });\n});\n// Creating form\nvar form = document.createElement('form');\nform.classList.add('new-employee-form');\ntrHeadList.forEach(function(element) {\n    var label = document.createElement('label');\n    label.textContent = element.textContent + ':';\n    var input = document.createElement('input');\n    if (element.textContent === 'Office') {\n        var select = document.createElement('select');\n        select.setAttribute('name', element.textContent.toLocaleLowerCase);\n        select.setAttribute('type', 'select');\n        select.setAttribute('data-qa', element.textContent.toLocaleLowerCase);\n        var officeTable = [\n            'Tokyo',\n            'Singapore',\n            'London',\n            'New York',\n            'Edinburgh',\n            'San Francisco'\n        ];\n        officeTable.forEach(function(town) {\n            var option = document.createElement('option');\n            option.setAttribute('value', town);\n            option.textContent = town;\n            select.appendChild(option);\n        });\n        label.appendChild(select);\n    } else if (element.textContent === 'Age' || element.textContent === 'Salary') {\n        input.setAttribute('name', element.textContent);\n        input.setAttribute('type', 'number');\n        input.setAttribute('data-qa', element.textContent);\n        label.appendChild(input);\n    } else {\n        input.setAttribute('name', element.textContent);\n        input.setAttribute('type', 'text');\n        input.setAttribute('data-qa', element.textContent);\n        label.appendChild(input);\n    }\n    form.appendChild(label);\n});\nvar button = document.createElement('button');\nbutton.setAttribute('type', 'button');\nbutton.textContent = 'Save to table';\nform.appendChild(button);\nbody.appendChild(form);\n// Adding new Employee\nbutton.addEventListener('click', function() {\n    var inputList = document.querySelectorAll('form > label > input, form > label > select');\n    var existingDiv = document.querySelector('div');\n    if (existingDiv === null) existingDiv = document.createElement('div');\n    else existingDiv.parentElement.removeChild(existingDiv);\n    var tableRow = document.createElement('tr');\n    var flagCheck = true;\n    existingDiv.setAttribute('data-qa', 'notification');\n    inputList.forEach(function(input) {\n        if (input.name === 'Name') {\n            if (input.value.length < 4) {\n                flagCheck = false;\n                existingDiv.classList.add('error');\n                existingDiv.textContent = 'ERROR: To short Name';\n                body.appendChild(existingDiv);\n            } else {\n                var newTd = document.createElement('td');\n                newTd.textContent = input.value;\n                tableRow.appendChild(newTd);\n            }\n        } else if (input.name === 'Age') {\n            if (parseInt(input.value) < 18 || parseInt(input.value) > 90) {\n                flagCheck = false;\n                existingDiv.classList.add('error');\n                existingDiv.textContent = 'ERROR: Age is not between 18 and 90';\n                body.appendChild(existingDiv);\n            } else {\n                var newTd1 = document.createElement('td');\n                newTd1.textContent = input.value;\n                tableRow.appendChild(newTd1);\n            }\n        } else if (input.name === 'Salary') {\n            var newTd2 = document.createElement('td');\n            var salary = Number(input.value);\n            var formatter = new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n            });\n            var formattedSalary = formatter.format(salary);\n            newTd2.textContent = formattedSalary;\n            tableRow.appendChild(newTd2);\n        } else {\n            var newTd3 = document.createElement('td');\n            newTd3.textContent = input.value;\n            tableRow.appendChild(newTd3);\n        }\n    });\n    if (flagCheck === true) {\n        tbody.appendChild(tableRow);\n        existingDiv.classList.add('success');\n        existingDiv.textContent = 'Success adding new Employee';\n        body.appendChild(existingDiv);\n    }\n});\n\n//# sourceMappingURL=index.1da43070.js.map\n","'use strict';\n// write code here\n\nconst body = document.querySelector('body');\nconst trHeadList = document.querySelectorAll('thead > tr > th');\nconst tbody = document.querySelector('tbody');\nlet trListTable = Array.from(tbody.querySelectorAll('tr'));\n\n// Sorting table\nconst sortOrder = {};\n\ntrHeadList.forEach((element) => {\n  element.addEventListener('click', () => sortTable(element.cellIndex));\n});\n\nfunction sortTable(columnIndex) {\n  trListTable = Array.from(tbody.querySelectorAll('tr'));\n\n  sortOrder[columnIndex] = sortOrder[columnIndex] === 'asc' ? 'desc' : 'asc';\n\n  const sortedRows = [...trListTable].sort((a, b) => {\n    const aText = a.cells[columnIndex].textContent.trim();\n    const bText = b.cells[columnIndex].textContent.trim();\n\n    if (columnIndex === 0 || columnIndex === 1 || columnIndex === 2) {\n      const comparison = aText.localeCompare(bText);\n\n      return sortOrder[columnIndex] === 'asc' ? comparison : -comparison;\n    } else if (columnIndex === 3) {\n      const comparison = Number(aText) - Number(bText);\n\n      return sortOrder[columnIndex] === 'asc' ? comparison : -comparison;\n    } else if (columnIndex === 4) {\n      const newA = aText.replace(/[,$()]/g, '');\n      const newB = bText.replace(/[,$()]/g, '');\n\n      const comparison = Number(newA) - Number(newB);\n\n      return sortOrder[columnIndex] === 'asc' ? comparison : -comparison;\n    }\n  });\n\n  tbody.innerHTML = '';\n  sortedRows.forEach((row) => tbody.appendChild(row));\n}\n\n// Selecting row\ntrListTable.forEach((element) => {\n  element.addEventListener('click', () => {\n    trListTable.forEach((row) => {\n      if (row.classList.contains('active')) {\n        row.classList.remove('active');\n      }\n    });\n    element.classList.toggle('active');\n  });\n});\n\n// Creating form\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\ntrHeadList.forEach((element) => {\n  const label = document.createElement('label');\n\n  label.textContent = element.textContent + ':';\n\n  const input = document.createElement('input');\n\n  if (element.textContent === 'Office') {\n    const select = document.createElement('select');\n\n    select.setAttribute('name', element.textContent.toLocaleLowerCase);\n    select.setAttribute('type', 'select');\n    select.setAttribute('data-qa', element.textContent.toLocaleLowerCase);\n\n    const officeTable = [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ];\n\n    officeTable.forEach((town) => {\n      const option = document.createElement('option');\n\n      option.setAttribute('value', town);\n      option.textContent = town;\n      select.appendChild(option);\n    });\n\n    label.appendChild(select);\n  } else if (\n    element.textContent === 'Age' ||\n    element.textContent === 'Salary'\n  ) {\n    input.setAttribute('name', element.textContent);\n    input.setAttribute('type', 'number');\n    input.setAttribute('data-qa', element.textContent);\n    label.appendChild(input);\n  } else {\n    input.setAttribute('name', element.textContent);\n    input.setAttribute('type', 'text');\n    input.setAttribute('data-qa', element.textContent);\n    label.appendChild(input);\n  }\n  form.appendChild(label);\n});\n\nconst button = document.createElement('button');\n\nbutton.setAttribute('type', 'button');\nbutton.textContent = 'Save to table';\nform.appendChild(button);\nbody.appendChild(form);\n\n// Adding new Employee\n\nbutton.addEventListener('click', () => {\n  const inputList = document.querySelectorAll(\n    'form > label > input, form > label > select',\n  );\n  let existingDiv = document.querySelector('div');\n\n  if (existingDiv === null) {\n    existingDiv = document.createElement('div');\n  } else {\n    existingDiv.parentElement.removeChild(existingDiv);\n  }\n\n  const tableRow = document.createElement('tr');\n  let flagCheck = true;\n\n  existingDiv.setAttribute('data-qa', 'notification');\n\n  inputList.forEach((input) => {\n    if (input.name === 'Name') {\n      if (input.value.length < 4) {\n        flagCheck = false;\n        existingDiv.classList.add('error');\n        existingDiv.textContent = 'ERROR: To short Name';\n        body.appendChild(existingDiv);\n      } else {\n        const newTd = document.createElement('td');\n\n        newTd.textContent = input.value;\n        tableRow.appendChild(newTd);\n      }\n    } else if (input.name === 'Age') {\n      if (parseInt(input.value) < 18 || parseInt(input.value) > 90) {\n        flagCheck = false;\n        existingDiv.classList.add('error');\n        existingDiv.textContent = 'ERROR: Age is not between 18 and 90';\n        body.appendChild(existingDiv);\n      } else {\n        const newTd = document.createElement('td');\n\n        newTd.textContent = input.value;\n        tableRow.appendChild(newTd);\n      }\n    } else if (input.name === 'Salary') {\n      const newTd = document.createElement('td');\n      const salary = Number(input.value);\n      const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      });\n      const formattedSalary = formatter.format(salary);\n\n      newTd.textContent = formattedSalary;\n      tableRow.appendChild(newTd);\n    } else {\n      const newTd = document.createElement('td');\n\n      newTd.textContent = input.value;\n      tableRow.appendChild(newTd);\n    }\n  });\n\n  if (flagCheck === true) {\n    tbody.appendChild(tableRow);\n    existingDiv.classList.add('success');\n    existingDiv.textContent = 'Success adding new Employee';\n    body.appendChild(existingDiv);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","body","document","querySelector","trHeadList","querySelectorAll","tbody","trListTable","from","sortOrder","forEach","element","addEventListener","columnIndex","sortedRows","cellIndex","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","aText","cells","textContent","trim","bText","comparison","localeCompare","comparison1","Number","newA","replace","newB","comparison2","innerHTML","row","appendChild","classList","contains","remove","toggle","form","createElement","add","label","input","select","setAttribute","toLocaleLowerCase","officeTable","town","option","button","inputList","existingDiv","parentElement","removeChild","tableRow","flagCheck","value","newTd","parseInt","newTd1","newTd2","salary","formattedSalary","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","newTd3"],"version":3,"file":"index.1da43070.js.map"}